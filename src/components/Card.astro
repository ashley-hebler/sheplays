---
import SportBadge from "./SportBadge.astro";
interface Network {
	id: number;
	name: string;
}

interface Sport {
	id: number;
	name: string;
}

interface Props {
	name: string;
	date: string;
	networks: Network[];
	sport: Sport;
}

const { name, date, networks, sport } = Astro.props;
---

<li class="link-card">
	<div>
		<SportBadge sport={sport.name} />
		<h2>
			{name}
		</h2>
		<p>
			{date}
		</p>
		<p>
			{networks.map((network, index) => (
			  <>
				<span>{network.name}</span>{index !== networks.length - 1 && <span>, </span>}
			  </>
			))}
		  </p>
		  
	</div>
</li>
<style>
	.link-card {
		list-style: none;
		display: flex;
		padding: 0.25rem;
		background-color: white;
		background-image: none;
		background-size: 400%;
		border-radius: 0.6rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
			0 2px 4px -2px rgba(0, 0, 0, 0.1);
	}

	.link-card > div {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: 1rem 1.3rem;
		border-radius: 0.35rem;
		color: #111;
		background-color: white;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
		color: #444;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
	}
</style>
